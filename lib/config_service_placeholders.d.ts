import * as AWS from '../clients/all';
export abstract class ConfigurationServicePlaceholders {
  acm?: AWS.ACM.Types.ClientConfiguration;
  apigateway?: AWS.APIGateway.Types.ClientConfiguration;
  applicationautoscaling?: AWS.ApplicationAutoScaling.Types.ClientConfiguration;
  autoscaling?: AWS.AutoScaling.Types.ClientConfiguration;
  cloudformation?: AWS.CloudFormation.Types.ClientConfiguration;
  cloudfront?: AWS.CloudFront.Types.ClientConfiguration;
  cloudhsm?: AWS.CloudHSM.Types.ClientConfiguration;
  cloudsearch?: AWS.CloudSearch.Types.ClientConfiguration;
  cloudsearchdomain?: AWS.CloudSearchDomain.Types.ClientConfiguration;
  cloudtrail?: AWS.CloudTrail.Types.ClientConfiguration;
  cloudwatch?: AWS.CloudWatch.Types.ClientConfiguration;
  cloudwatchevents?: AWS.CloudWatchEvents.Types.ClientConfiguration;
  cloudwatchlogs?: AWS.CloudWatchLogs.Types.ClientConfiguration;
  codecommit?: AWS.CodeCommit.Types.ClientConfiguration;
  codedeploy?: AWS.CodeDeploy.Types.ClientConfiguration;
  codepipeline?: AWS.CodePipeline.Types.ClientConfiguration;
  cognitoidentity?: AWS.CognitoIdentity.Types.ClientConfiguration;
  cognitoidentityserviceprovider?: AWS.CognitoIdentityServiceProvider.Types.ClientConfiguration;
  cognitosync?: AWS.CognitoSync.Types.ClientConfiguration;
  configservice?: AWS.ConfigService.Types.ClientConfiguration;
  datapipeline?: AWS.DataPipeline.Types.ClientConfiguration;
  devicefarm?: AWS.DeviceFarm.Types.ClientConfiguration;
  directconnect?: AWS.DirectConnect.Types.ClientConfiguration;
  directoryservice?: AWS.DirectoryService.Types.ClientConfiguration;
  discovery?: AWS.Discovery.Types.ClientConfiguration;
  dms?: AWS.DMS.Types.ClientConfiguration;
  dynamodb?: AWS.DynamoDB.Types.ClientConfiguration;
  dynamodbstreams?: AWS.DynamoDBStreams.Types.ClientConfiguration;
  ec2?: AWS.EC2.Types.ClientConfiguration;
  ecr?: AWS.ECR.Types.ClientConfiguration;
  ecs?: AWS.ECS.Types.ClientConfiguration;
  efs?: AWS.EFS.Types.ClientConfiguration;
  elasticache?: AWS.ElastiCache.Types.ClientConfiguration;
  elasticbeanstalk?: AWS.ElasticBeanstalk.Types.ClientConfiguration;
  elb?: AWS.ELB.Types.ClientConfiguration;
  elbv2?: AWS.ELBv2.Types.ClientConfiguration;
  emr?: AWS.EMR.Types.ClientConfiguration;
  es?: AWS.ES.Types.ClientConfiguration;
  elastictranscoder?: AWS.ElasticTranscoder.Types.ClientConfiguration;
  firehose?: AWS.Firehose.Types.ClientConfiguration;
  gamelift?: AWS.GameLift.Types.ClientConfiguration;
  glacier?: AWS.Glacier.Types.ClientConfiguration;
  iam?: AWS.IAM.Types.ClientConfiguration;
  importexport?: AWS.ImportExport.Types.ClientConfiguration;
  inspector?: AWS.Inspector.Types.ClientConfiguration;
  iot?: AWS.Iot.Types.ClientConfiguration;
  iotdata?: AWS.IotData.Types.ClientConfiguration;
  kinesis?: AWS.Kinesis.Types.ClientConfiguration;
  kinesisanalytics?: AWS.KinesisAnalytics.Types.ClientConfiguration;
  kms?: AWS.KMS.Types.ClientConfiguration;
  lambda?: AWS.Lambda.Types.ClientConfiguration;
  machinelearning?: AWS.MachineLearning.Types.ClientConfiguration;
  marketplacecommerceanalytics?: AWS.MarketplaceCommerceAnalytics.Types.ClientConfiguration;
  marketplacemetering?: AWS.MarketplaceMetering.Types.ClientConfiguration;
  mobileanalytics?: AWS.MobileAnalytics.Types.ClientConfiguration;
  opsworks?: AWS.OpsWorks.Types.ClientConfiguration;
  rds?: AWS.RDS.Types.ClientConfiguration;
  redshift?: AWS.Redshift.Types.ClientConfiguration;
  route53?: AWS.Route53.Types.ClientConfiguration;
  route53domains?: AWS.Route53Domains.Types.ClientConfiguration;
  s3?: AWS.S3.Types.ClientConfiguration;
  servicecatalog?: AWS.ServiceCatalog.Types.ClientConfiguration;
  ses?: AWS.SES.Types.ClientConfiguration;
  simpledb?: AWS.SimpleDB.Types.ClientConfiguration;
  snowball?: AWS.Snowball.Types.ClientConfiguration;
  sns?: AWS.SNS.Types.ClientConfiguration;
  sqs?: AWS.SQS.Types.ClientConfiguration;
  ssm?: AWS.SSM.Types.ClientConfiguration;
  storagegateway?: AWS.StorageGateway.Types.ClientConfiguration;
  sts?: AWS.STS.Types.ClientConfiguration;
  support?: AWS.Support.Types.ClientConfiguration;
  swf?: AWS.SWF.Types.ClientConfiguration;
  waf?: AWS.WAF.Types.ClientConfiguration;
  workspaces?: AWS.WorkSpaces.Types.ClientConfiguration;
}
